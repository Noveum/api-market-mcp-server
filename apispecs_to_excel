import os
import json
import pandas as pd
from typing import List, Dict


def extract_openapi_info(file_path: str) -> Dict[str, any]:
    with open(file_path, 'r') as f:
        spec = json.load(f)

    tool_info = {}

    # Extracting tool name
    tool_info['Tool Name'] = spec.get('info', {}).get('title', 'Unknown')
    tool_info['Summary'] = spec.get('info', {}).get('description', 'No description provided')

    # Extracting endpoints and their parameters
    endpoints = []

    for path, methods in spec.get('paths', {}).items():
        for method, details in methods.items():
            if not isinstance(details, dict):
                continue
            parameters = details.get('parameters', [])
            params_info = []
            for param in parameters:
                param_name = param.get('name', 'Unknown')
                param_type = param.get('schema', {}).get('type', 'Unknown')
                params_info.append(f'{param_name} ({param_type})')

            # Extracting content type instead of output type
            responses = details.get('responses', {})
            content_type = 'Unknown'
            if '200' in responses:
                content = responses['200'].get('content', {})
                if content:
                    content_type = ', '.join(content.keys())  # Join all available content types

            endpoints.append({
                'Endpoint': f'{method.upper()} {path}',
                'Parameters': ', '.join(params_info) if params_info else 'None',
                'Content Type': content_type
            })

    tool_info['Endpoints'] = endpoints

    return tool_info


def process_folder(folder_path: str) -> pd.DataFrame:
    all_tools = []

    for file_name in os.listdir(folder_path):
        if file_name.endswith('.json'):
            file_path = os.path.join(folder_path, file_name)
            tool_info = extract_openapi_info(file_path)
            for endpoint in tool_info['Endpoints']:
                all_tools.append([
                    tool_info['Tool Name'],
                    tool_info['Summary'],
                    endpoint['Endpoint'],
                    endpoint['Parameters'],
                    endpoint['Content Type']
                ])

    # Convert to DataFrame
    df = pd.DataFrame(all_tools, columns=['Tool Name', 'Summary', 'Endpoint', 'Parameters', 'Content Type'])
    return df


def save_to_excel(df: pd.DataFrame, output_file: str):
    df.to_excel(output_file, index=False)


if __name__ == '__main__':
    folder_path = 'modified_json_files'  # Change this to your folder path
    output_file = 'openapi_extraction.xlsx'

    extracted_data = process_folder(folder_path)
    save_to_excel(extracted_data, output_file)
    print(f'Data saved to {output_file}')
